apiVersion: apps/v1
kind: Deployment
metadata:
  name: stedi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stedi-prod
  template:
    metadata:
      labels:
        app: stedi-prod
    spec:
      containers:
        - name: stedi-prod
          image: gcr.io/cubs-consulting/stedi
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: password
            - name: REDIS_HOST
              value: "redis-12921.c114.us-east-1-4.ec2.cloud.redislabs.com"
            - name: REDIS_PORT
              value: "12921"
            - name: REDIS_DB
              value: "0"
            - name: KAFKA_BROKER
              value: "localhost:9092"
          ports:
            - containerPort: 443
          resources:
            limits:
              cpu: ".5"
              memory: "500Mi"
            requests:
              cpu: ".25"
              memory: "250Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 4567
            initialDelaySeconds: 3
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: stedi-prod-service
spec:
  selector:
    app: stedi-prod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4567

---
apiVersion: v1
kind: Service
metadata:
  name: stedi-prod-nodeport
spec:
  selector:
    app: stedi-prod
  type: NodePort
  ports:
    - port: 80
      targetPort: 4567
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: stedi-prod-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: stedi-prod-public
    networking.gke.io/managed-certificates: stedi-prod-certificate
    kubernetes.io/ingress.allow-http: "false"
spec:
  backend:
    serviceName: stedi-prod-nodeport
    servicePort: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: stedi-prod-certificate
spec:
  domains:
    - stedi.me
    
